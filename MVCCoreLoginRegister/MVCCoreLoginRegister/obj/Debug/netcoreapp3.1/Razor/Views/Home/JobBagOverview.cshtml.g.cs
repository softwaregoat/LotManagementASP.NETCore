#pragma checksum "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1c3b6a0ac6250cd602beb7b8013150c920c8f2c9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_JobBagOverview), @"mvc.1.0.view", @"/Views/Home/JobBagOverview.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\_ViewImports.cshtml"
using MVCCoreLoginRegister;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\_ViewImports.cshtml"
using MVCCoreLoginRegister.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c3b6a0ac6250cd602beb7b8013150c920c8f2c9", @"/Views/Home/JobBagOverview.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa81fb597f0312d1dc6fa9eddf073d33a4a0fee5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_JobBagOverview : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<JobBagOverview>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
  
    ViewData["Title"] = "JobBagOverview";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1 class=\"text-center\">Job Bag Overview</h1>\r\n<div class=\"row\" style=\"margin:50px;\">\r\n    <div class=\"col-md-2\">\r\n        <select class=\"form-control\" id=\"Technology\" name=\"Technology\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c93784", async() => {
                WriteLiteral("Select Technology");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 12 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
             if (Model.Technologies != null)
            {
                foreach (var item in Model.Technologies)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c95152", async() => {
#nullable restore
#line 16 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                                                  Write(item.TechnologyName);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 16 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                       WriteLiteral(item.TechnologyId);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 17 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                }
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </select>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        <select class=\"form-control\" id=\"Machine\" name=\"Machine\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c97542", async() => {
                WriteLiteral("Select Machine");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 26 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
             if (Model.Technologies != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                 foreach (var item in Model.Machines)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c99132", async() => {
#nullable restore
#line 30 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                                               Write(item.MachineName);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 30 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                       WriteLiteral(item.MachineId);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 31 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                 
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </select>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        <select class=\"form-control\" id=\"Lot\" name=\"Lot\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c911734", async() => {
                WriteLiteral("Select Lot");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 40 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
             if (Model.Technologies != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                 foreach (var item in Model.Lots)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3b6a0ac6250cd602beb7b8013150c920c8f2c913317", async() => {
#nullable restore
#line 44 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                                           Write(item.LotName);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 44 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                       WriteLiteral(item.LotId);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 45 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 45 "E:\Project\VisualStudio\Core\LotManagementASP.NETCore\MVCCoreLoginRegister\MVCCoreLoginRegister\Views\Home\JobBagOverview.cshtml"
                 
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </select>
    </div>
    <div class=""col-md-2"">
    </div>
</div>
<br />
<div class=""row"">
    <div class=""col-md-4"">
        <h3>Master Data</h3>
    </div>
    <div class=""col-md-4"">
        <h3>Additional Information</h3>
    </div>
    <div class=""col-md-4"">
        <h3>Primary Materials</h3>
    </div>
</div>
<br />
    <div class=""row"">
        <div class=""col-md-4"">
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""ProductName"" class=""control-label"">ProductName</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""ProductName"" type=""text"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Des"" class=""control-label");
            WriteLiteral(@""">Description</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Des"" type=""text"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Tol"" class=""control-label"">Tool</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Tol"" type=""text"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Cav"" class=""control-label"">Cavities</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Cav"" type=""number"" class=""form-control"" />
        ");
            WriteLiteral(@"            </div>
                </div>


            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Rtq"" class=""control-label"">Run To Quarantine</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Rtq"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>

            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Fut"" class=""control-label"">Functional Testing</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Fut"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">");
            WriteLiteral(@"
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Sts"" class=""control-label"">Stratified Samples</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Sts"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Ens"" class=""control-label"">Enhanced Sampling</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Ens"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <la");
            WriteLiteral(@"bel for=""P1"" class=""control-label"">Polymer 1</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""P1"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""P1q"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""P2"" class=""control-label"">Polymer 2</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""P2"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""P2q"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-g");
            WriteLiteral(@"roup"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Mb"" class=""control-label"">Masterbatch</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Mb"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Mbq"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Sa"" class=""control-label"">Slip Additive</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Sa"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Saq"" type=""number"" class=""");
            WriteLiteral(@"form-control"" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class=""row"">
        <div class=""col-md-4"">
            <h3>Run Data</h3>
        </div>
        <div class=""col-md-4"">
        </div>
        <div class=""col-md-4"">
            <h3>Packaging Materials</h3>
        </div>
    </div>
    <br />
    <div class=""row"">
        <div class=""col-md-4"">

            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Loq"" class=""control-label"">Lot Size</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Loq"" type=""number"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label ");
            WriteLiteral(@"for=""Cph"" class=""control-label"">Cartons / Hour</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Cph"" type=""number"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Pps"" class=""control-label"">Pallets / Shift</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""Pps"" type=""number"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <label for=""Loh"" class=""control-label"">Lot Duration</label>
                    </div>
                    <div class=""col-sm-6"">
                        <input id=""");
            WriteLiteral(@"Loh"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Coc"" class=""control-label"">C of C</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Coc"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Coa"" class=""control-label"">C of A</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Coa"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>

            </div>
            <div");
            WriteLiteral(@" class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Spc"" class=""control-label"">SPC</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Spc"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>


            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Por"" class=""control-label"">Positive Release</label>
                    </div>
                    <div class=""col-sm-2"">
                        <input id=""Por"" type=""checkbox"" class=""form-control"" />
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">

            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                    ");
            WriteLiteral(@"    <label for=""Pa"" class=""control-label"">Pallet</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Pa"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Paq"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Ca"" class=""control-label"">Carton</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Ca"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Caq"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-");
            WriteLiteral(@"group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""Cl"" class=""control-label"">Carton Liner</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Cl"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""Clq"" type=""number"" class=""form-control"" />
                    </div>
                </div>
            </div>
            <div class=""form-group"">
                <div class=""row"">
                    <div class=""col-sm-4"">
                        <label for=""lb"" class=""control-label"">Inner Bag</label>
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""lb"" type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-4"">
                        <input id=""lbq"" type=""number"" class=""fo");
            WriteLiteral("rm-control\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
        <script>
            $(document).ready(function () {
                let TechnologyID = getCookie('TechnologyID');
                let Machine = getCookie('Machine');
                let LotID = getCookie('LotID');
                let Lot = getCookie('Lot');
                let MachineID = getCookie('MachineID');
                $(""input"").each(function () {
                    let n = $(this).attr(""id"");
                    let v = getCookie(n);
                    if ($(this).attr('type') == 'checkbox') {
                        $(this).prop('checked', v)
                    } else {
                        $(this).val(v);
                    }
                });

                if (TechnologyID != null && Machine != null && LotID != null) {
                    $.ajax({
                        type: ""POST"",
                        url: ""/Home/GetTechnology"",
                        success: function (response) {
                            if (response != 'Failed') {
     ");
                WriteLiteral(@"                           var items = '<option>Select a Technology</option>';
                                $(""#Technology"").empty();
                                for (var i = 0; i < response.length; i++) {
                                    var em = response[i];
                                    if (TechnologyID == em.technologyId) {
                                        items += ""<option value='"" + em.technologyId + ""' selected>"" + em.technologyName + ""</option>"";
                                    } else {
                                        items += ""<option value='"" + em.technologyId + ""'>"" + em.technologyName + ""</option>"";
                                    }
                                }
                                $('#Technology').html(items);
                            }
                        }
                    }).done(function (data) {
                        $.ajax({
                            type: ""POST"",
                            url: ""/Home/Get");
                WriteLiteral(@"Machine"",
                            data: { 'TechnologyID': TechnologyID },
                            success: function (response) {
                                if (response != 'Failed') {
                                    var items = '<option>Select a Machine</option>';
                                    $(""#Machine"").empty();
                                    for (var i = 0; i < response.length; i++) {
                                        var em = response[i];
                                        if (MachineID == em.machineId) {
                                            items += ""<option value='"" + em.machineId + ""' selected>"" + em.machineName + ""</option>"";
                                        } else {
                                            items += ""<option value='"" + em.machineId + ""'>"" + em.machineName + ""</option>"";
                                        }
                                    }
                                    $('#Machine').html(items);
  ");
                WriteLiteral(@"                              }
                            }
                        });
                    }).done(function (data) {
                        $.ajax({
                            type: ""POST"",
                            url: ""/Home/GetLot"",
                            data: { 'Machine': Machine },
                            success: function (response) {
                                if (response != 'Failed') {
                                    var items = '<option>Select a Lot</option>';
                                    $(""#Lot"").empty();
                                    for (var i = 0; i < response.length; i++) {
                                        var em = response[i];
                                        if (LotID == em.lotId) {
                                            items += ""<option value='"" + em.lotId + ""' selected>"" + em.lotName + ""</option>"";
                                        } else {
                                            items +=");
                WriteLiteral(@" ""<option value='"" + em.lotId + ""'>"" + em.lotName + ""</option>"";
                                        }
                                    }
                                    $('#Lot').html(items);
                                    toastr.success(""Success for Load"");
                                }
                                else toastr.error(response);
                            }
                        });
                    });
                }
                $('#Technology').change(function () {
                    let TechnologyID = $('#Technology').val();
                    $.ajax({
                        type: ""POST"",
                        url: ""/Home/GetMachine"",
                        data: { 'TechnologyID': TechnologyID },
                        success: function (response) {
                            if (response != 'Failed') {
                                var items = '<option>Select a Machine</option>';
                                $(""#Machine""");
                WriteLiteral(@").empty();
                                for (var i = 0; i < response.length; i++) {
                                    var em = response[i];
                                    items += ""<option value='"" + em.machineId + ""'>"" + em.machineName + ""</option>"";
                                    setCookie('MachineID', response[0].machineId, 1);
                                    setCookie('Machine', response[0].machineName, 1);
                                }
                                $('#Machine').html(items);
                                $('#Lot').html('<option>Select a Lot</option>');
                                toastr.success(""Success for Machine"");
                            }
                            else toastr.error(response);
                        }
                    });
                });
                $('#Machine').change(function () {
                    let Machine = $('#Machine option:selected').text();
                    $.ajax({
                  ");
                WriteLiteral(@"      type: ""POST"",
                        url: ""/Home/GetLot"",
                        data: { 'Machine': Machine },
                        success: function (response) {
                            if (response != 'Failed') {
                                var items = '<option>Select a Lot</option>';
                                $(""#Lot"").empty();
                                for (var i = 0; i < response.length; i++) {
                                    var em = response[i];
                                    items += ""<option value='"" + em.lotId + ""'>"" + em.lotName + ""</option>"";
                                    setCookie('LotID', response[0].lotId, 1);
                                    setCookie('Lot', response[0].lotName, 1);
                                }
                                $('#Lot').html(items);
                                toastr.success(""Success for Lot"");
                            }
                            else toastr.error(response);
       ");
                WriteLiteral(@"                 }
                    });
                });

                $('select').change(function () {
                    var v = $(this).val();
                    var t = $(this).find(""option:selected"").text();
                    var id = $(this).attr('id');
                    setCookie(id + 'ID', v, 1);
                    setCookie(id, t, 1);
                    $('#ProductName').val('');
                    $('#Des').val('');
                    $('#Tol').val('');
                    $('#Cav').val('');
                    $('#Loq').val('');
                    $('#Cph').val('');
                    $('#Pps').val('');
                    $('#Loh').val('');
                    $('#P1').val('');
                    $('#P1q').val('');
                    $('#P2').val('');
                    $('#P2q').val('');
                    $('#Mb').val('');
                    $('#Mbq').val('');
                    $('#Sa').val('');
                    $('#Saq').val('');
        ");
                WriteLiteral(@"            $('#Pa').val('');
                    $('#Paq').val('');
                    $('#Ca').val('');
                    $('#Caq').val('');
                    $('#Cl').val('');
                    $('#Clq').val('');
                    $('#lb').val('');
                    $('#lbq').val('');

                    $('#Rtq').prop('checked', false);

                    $('#Fut').prop('checked', false);

                    $('#Sts').prop('checked', false);

                    $('#Ens').prop('checked', false);

                    $('#Coc').prop('checked', false);

                    $('#Coa').prop('checked', false);

                    $('#Spc').prop('checked', false);

                    $('#Por').prop('checked', false);

                    Technology = $('#Technology option:selected').text();
                    Machine = $('#Machine option:selected').text();
                    Lot = $('#Lot option:selected').text();
                    getQryLot(Technology, Machine, Lo");
                WriteLiteral(@"t);
                });
                //let TechnologyID = $(""#Technology"").val();
               
                $('input').change(function () {
                    let v = $(this).val();
                    let n = $(this).attr('id');
                    if ($(this).attr('type') == 'checkbox') {
                        if ($(this).prop('checked')) {
                            v = true;
                        } else {
                            v = false;
                        }
                    }
                    setCookie(n, v, 1);
                });
                $('input[type=""checkbox""]').click(function () {
                    let v = $(this).val();
                    let n = $(this).attr('id');
                    if ($(this).prop('checked')) {
                        v = true;
                    } else {
                        v = false;
                    }
                    setCookie(n, v, 1);
                });
            });
            function");
                WriteLiteral(@" getQryLot(Technology, Machine, Lot) {
                $.ajax({
                    type: ""POST"",
                    url: ""/Home/QryLot"",
                    data: { 'Technology': Technology, 'Machine': Machine, 'Lot': Lot },
                    success: function (response) {
                        if (response != 'Failed') {
                            $('#ProductName').val(response.productName);
                            $('#Des').val(response.des);
                            $('#Tol').val(response.tol);
                            $('#Cav').val(response.cav);
                            $('#Loq').val(response.loq);
                            $('#Cph').val(response.cph);
                            $('#Pps').val(response.pps);
                            $('#Loh').val(response.loh);
                            $('#P1').val(response.p1);
                            $('#P1q').val(response.p1q);
                            $('#P2').val(response.p2);
                            $('#P2q')");
                WriteLiteral(@".val(response.p2q);
                            $('#Mb').val(response.mb);
                            $('#Mbq').val(response.mbq);
                            $('#Sa').val(response.sa);
                            $('#Saq').val(response.saq);
                            $('#Pa').val(response.pa);
                            $('#Paq').val(response.paq);
                            $('#Ca').val(response.ca);
                            $('#Caq').val(response.caq);
                            $('#Cl').val(response.cl);
                            $('#Clq').val(response.clq);
                            $('#lb').val(response.lb);
                            $('#lbq').val(response.lbq);
                            if (response.rtq) {
                                $('#Rtq').prop('checked', true);
                            } else {
                                $('#Rtq').prop('checked', false);
                            }
                            if (response.fut) {
                   ");
                WriteLiteral(@"             $('#Fut').prop('checked', true);
                            } else {
                                $('#Fut').prop('checked', false);
                            }
                            if (response.sts) {
                                $('#Sts').prop('checked', true);
                            } else {
                                $('#Sts').prop('checked', false);
                            }
                            if (response.ens) {
                                $('#Ens').prop('checked', true);
                            } else {
                                $('#Ens').prop('checked', false);
                            }
                            if (response.coc) {
                                $('#Coc').prop('checked', true);
                            } else {
                                $('#Coc').prop('checked', false);
                            }
                            if (response.coa) {
                                $('#Coa");
                WriteLiteral(@"').prop('checked', true);
                            } else {
                                $('#Coa').prop('checked', false);
                            }
                            if (response.spc) {
                                $('#Spc').prop('checked', true);
                            } else {
                                $('#Spc').prop('checked', false);
                            }
                            if (response.por) {
                                $('#Por').prop('checked', true);
                            } else {
                                $('#Por').prop('checked', false);
                            }
                            toastr.success('Success!');
                        } else {
                            toastr.error('There is no QryLot');
                        }
                    },
                    failure: function (response) {
                        toastr.error(response.responseText);
                    },
              ");
                WriteLiteral(@"      error: function (response) {
                        toastr.error(response.responseText);
                    }
                }).done(function () {
                    $('input').each(function () {
                        let v = $(this).val();
                        let n = $(this).attr('id');
                        if ($(this).attr('type') == 'checkbox') {
                            if ($(this).prop('checked')) {
                                v = true;
                            } else {
                                v = false;
                            }
                        }
                        setCookie(n, v, 1);
                    });
                });

            }
            timerDown('10:30', '/Account/Logout');
        </script>
    ");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<JobBagOverview> Html { get; private set; }
    }
}
#pragma warning restore 1591
